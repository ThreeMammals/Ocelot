# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
name: PR
on: pull_request

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: .NET Version 
      run: dotnet --version
    - name: .NET Info
      run: dotnet --info
    - name: Check .NET 9
      id: check-dotnet9
      run: |
        DOTNET9_VERSION=$(dotnet --version)
        if [[ "$DOTNET9_VERSION" =~ ^9\.0\.[0-9]+$ ]]; then
          echo "dotnet9_installed=true" >> $GITHUB_ENV
        else
          echo "dotnet9_installed=false" >> $GITHUB_ENV
        fi
    - name: Setup .NET 9
      if: env.dotnet9_installed == 'false'
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0.x
    - name: .NET Info
      run: dotnet --info
    - name: Checkout
      uses: actions/checkout@v4
    - name: Restore
      run: dotnet restore ./Ocelot.sln -p:TargetFramework=net9.0
    - name: Build
      run: dotnet build --no-restore ./Ocelot.sln --framework net9.0
    - name: Unit Tests
      run: dotnet test --no-restore --no-build --verbosity normal --framework net9.0 ./test/Ocelot.UnitTests/Ocelot.UnitTests.csproj
    - name: Integration Tests
      run: dotnet test --no-restore --no-build --verbosity normal --framework net9.0 ./test/Ocelot.IntegrationTests/Ocelot.IntegrationTests.csproj
    - name: Acceptance Tests
      run: dotnet test --no-restore --no-build --verbosity normal --framework net9.0 ./test/Ocelot.AcceptanceTests/Ocelot.AcceptanceTests.csproj
  build-cake:
    needs: build
    runs-on: ubuntu-latest
    environment: build.cake
    steps:
    - name: Setup .NET 9
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0.x
    - name: Branch Name
      run: echo "Branch name is ${{ github.ref_name }}"
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Cake Build
      uses: cake-build/cake-action@v3
      with:
        target: PullRequest
      env:
        OCELOT_COVERALLS_TOKEN: ${{ secrets.OCELOT_COVERALLS_TOKEN }}
  