<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <RuntimeFrameworkVersion>2.0.0</RuntimeFrameworkVersion>
    <NETStandardImplicitPackageVersion>2.0.0</NETStandardImplicitPackageVersion>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <Description>Ocelot is an API Gateway. The project is aimed at people using .NET running a micro services / service orientated architecture that need a unified point of entry into their system. In particular I want easy integration with IdentityServer reference and bearer tokens.  reference tokens. Ocelot is a bunch of middlewares in a specific order. Ocelot manipulates the HttpRequest object into a state specified by its configuration until it reaches a request builder middleware where it creates a HttpRequestMessage object which is used to make a request to a downstream service. The middleware that makes the request is the last thing in the Ocelot pipeline. It does not call the next middleware. The response from the downstream service is stored in a per request scoped repository and retrived as the requests goes back up the Ocelot pipeline. There is a piece of middleware that maps the HttpResponseMessage onto the HttpResponse object and that is returned to the client. That is basically it with a bunch of other features.</Description>
    <AssemblyTitle>Ocelot</AssemblyTitle>
    <VersionPrefix>0.0.0-dev</VersionPrefix>
    <AssemblyName>Ocelot</AssemblyName>
    <PackageId>Ocelot</PackageId>
    <PackageTags>API Gateway;.NET core</PackageTags>
    <PackageProjectUrl>https://github.com/ThreeMammals/Ocelot</PackageProjectUrl>
    <PackageProjectUrl>https://github.com/ThreeMammals/Ocelot</PackageProjectUrl>
    <PackageIconUrl>http://threemammals.com/images/ocelot_logo.png</PackageIconUrl>
    <RuntimeIdentifiers>win10-x64;osx.10.11-x64;osx.10.12-x64;win7-x64</RuntimeIdentifiers>
    <GenerateAssemblyConfigurationAttribute>false</GenerateAssemblyConfigurationAttribute>
    <GenerateAssemblyCompanyAttribute>false</GenerateAssemblyCompanyAttribute>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <GenerateAssemblyProductAttribute>false</GenerateAssemblyProductAttribute>
    <Authors>Tom Pallister</Authors>
    <CodeAnalysisRuleSet>..\..\codeanalysis.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DebugType>full</DebugType>
    <DebugSymbols>True</DebugSymbols>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="FluentValidation" Version="7.6.104" />
    <PackageReference Include="Microsoft.AspNetCore" Version="2.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc" Version="2.1.1" />
    <PackageReference Include="Microsoft.AspNetCore.MiddlewareAnalysis" Version="2.1.1" />
    <PackageReference Include="Microsoft.Extensions.DiagnosticAdapter" Version="2.1.0">
      <NoWarn>NU1701</NoWarn>
    </PackageReference>
    <PackageReference Include="StyleCop.Analyzers" Version="1.0.2">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>
</Project>
